# Warning: This config does not include keys that have an unset value

# $all is shorthand for $username$hostname$localip$shlvl$singularity$kubernetes$directory$vcsh$git_branch$git_commit$git_state$git_metrics$git_status$hg_branch$docker_context$package$c$cmake$cobol$dart$deno$dotnet$elixir$elm$erlang$golang$haskell$helm$java$julia$kotlin$lua$nim$nodejs$ocaml$perl$php$pulumi$purescript$python$rlang$red$ruby$rust$scala$swift$terraform$vlang$vagrant$zig$buf$nix_shell$conda$spack$memory_usage$aws$gcloud$openstack$azure$env_var$crystal$custom$sudo$cmd_duration$line_break$jobs$battery$time$status$container$shell$character
"$schema" = 'https://starship.rs/config-schema.json'
format = '$all'
right_format = ''
continuation_prompt = '[∙](bright-black) '
scan_timeout = 10
command_timeout = 200
add_newline = true

[aws]
format = 'on [$symbol($profile )(\($region\) )(\[$duration\] )]($style)'
symbol = '☁️  '
style = 'bold yellow'
disabled = false
expiration_symbol = 'X'
force_display = false

[aws.region_aliases]

[aws.profile_aliases]

[battery]
full_symbol = ' '
charging_symbol = ' '
discharging_symbol = ' '
unknown_symbol = ' '
empty_symbol = ' '
disabled = false
format = '[$symbol$percentage]($style) '

[[battery.display]]
threshold = 10
style = 'red bold'

[buf]
format = 'with [$symbol ($version)]($style)'
version_format = 'v${raw}'
symbol = ''
style = 'bold blue'
disabled = false
detect_extensions = []
detect_files = [
    'buf.yaml',
    'buf.gen.yaml',
    'buf.work.yaml',
]
detect_folders = []

[c]
format = 'via [$symbol($version(-$name) )]($style)'
version_format = 'v${raw}'
style = '149 bold'
symbol = 'C '
disabled = false
detect_extensions = [
    'c',
    'h',
]
detect_files = []
detect_folders = []
commands = [
    [
    'cc',
    '--version',
],
    [
    'gcc',
    '--version',
],
    [
    'clang',
    '--version',
],
]

[character]
format = '$symbol '
success_symbol = '[❯](bold green)'
error_symbol = '[❯](bold red)'
vicmd_symbol = '[❮](bold green)'
disabled = false

[cmd_duration]
min_time = 2000
format = 'took [$duration]($style) '
style = 'yellow bold'
show_milliseconds = false
disabled = true
show_notifications = false
min_time_to_notify = 45000

[container]
format = '[$symbol \[$name\]]($style) '
symbol = '⬢'
style = 'red bold dimmed'
disabled = false

[directory]
truncation_length = 3
truncate_to_repo = true
fish_style_pwd_dir_length = 0
use_logical_path = true
format = '[$path]($style)[$read_only]($read_only_style) '
repo_root_format = '[$before_root_path]($style)[$repo_root]($repo_root_style)[$path]($style)[$read_only]($read_only_style) '
style = 'cyan bold'
disabled = false
read_only = '🔒'
read_only_style = 'red'
truncation_symbol = ''
home_symbol = '~'
use_os_path_sep = true

[directory.substitutions]

[docker_context]
symbol = '🐳 '
style = 'blue bold'
format = 'via [$symbol$context]($style) '
only_with_files = true
disabled = false
detect_extensions = []
detect_files = [
    'docker-compose.yml',
    'docker-compose.yaml',
    'Dockerfile',
]
detect_folders = []

[env_var]

[fill]
style = 'bold black'
symbol = '.'
disabled = false

[git_branch]
format = 'on [$symbol$branch(:$remote_branch)]($style) '
symbol = ' '
style = 'bold purple'
truncation_length = 9223372036854775807
truncation_symbol = '…'
only_attached = false
always_show_remote = false
ignore_branches = []
disabled = false

[git_commit]
commit_hash_length = 7
format = '[\($hash$tag\)]($style) '
style = 'green bold'
only_detached = true
disabled = false
tag_symbol = ' 🏷  '
tag_disabled = true

[git_metrics]
added_style = 'bold green'
deleted_style = 'bold red'
only_nonzero_diffs = true
format = '([+$added]($added_style) )([-$deleted]($deleted_style) )'
disabled = true

[git_state]
rebase = 'REBASING'
merge = 'MERGING'
revert = 'REVERTING'
cherry_pick = 'CHERRY-PICKING'
bisect = 'BISECTING'
am = 'AM'
am_or_rebase = 'AM/REBASE'
style = 'bold yellow'
format = '\([$state( $progress_current/$progress_total)]($style)\) '
disabled = false

[git_status]
format = '([\[$all_status$ahead_behind\]]($style) )'
style = 'red bold'
stashed = '\$'
ahead = '⇡'
behind = '⇣'
up_to_date = ''
diverged = '⇕'
conflicted = '='
deleted = '✘'
renamed = '»'
modified = '!'
staged = '+'
untracked = '?'
ignore_submodules = true
disabled = true

[golang]
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = '🐹 '
style = 'bold cyan'
disabled = false
detect_extensions = ['go']
detect_files = [
    'go.mod',
    'go.sum',
    'glide.yaml',
    'Gopkg.yml',
    'Gopkg.lock',
    '.go-version',
]
detect_folders = ['Godeps']

[hostname]
ssh_only = true
trim_at = '.'
format = '[$hostname]($style) in '
style = 'green dimmed bold'
disabled = false


[jobs]
threshold = 1
symbol_threshold = 1
number_threshold = 2
format = '[$symbol$number]($style) '
symbol = '✦'
style = 'bold blue'
disabled = false

[line_break]
disabled = false

[localip]
ssh_only = true
format = '[$localipv4]($style) '
style = 'yellow bold'
disabled = true

[memory_usage]
threshold = 75
format = 'via $symbol[$ram( | $swap)]($style) '
style = 'white bold dimmed'
symbol = '🐏 '
disabled = true

[python]
pyenv_version_name = false
pyenv_prefix = 'pyenv '
python_binary = [
    'python',
    'python3',
    'python2',
]
format = 'via [${symbol}${pyenv_prefix}(${version} )(\($virtualenv\) )]($style)'
version_format = 'v${raw}'
style = 'yellow bold'
symbol = '🐍 '
disabled = false
detect_extensions = ['py']
detect_files = [
    'requirements.txt',
    '.python-version',
    'pyproject.toml',
    'Pipfile',
    'tox.ini',
    'setup.py',
    '__init__.py',
]
detect_folders = []

[red]
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = '🔺 '
style = 'red bold'
disabled = false
detect_extensions = [
    'red',
    'reds',
]
detect_files = []
detect_folders = []

[ruby]
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = '💎 '
style = 'bold red'
disabled = false
detect_extensions = ['rb']
detect_files = [
    'Gemfile',
    '.ruby-version',
]
detect_folders = []
detect_variables = [
    'RUBY_VERSION',
    'RBENV_VERSION',
]

[rust]
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = '🦀 '
style = 'bold red'
disabled = false
detect_extensions = ['rs']
detect_files = ['Cargo.toml']
detect_folders = []

[scala]
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
disabled = false
style = 'red bold'
symbol = '🆂 '
detect_extensions = [
    'sbt',
    'scala',
]
detect_files = [
    '.scalaenv',
    '.sbtenv',
    'build.sbt',
]
detect_folders = ['.metals']

[shell]
format = '[$indicator]($style) '
bash_indicator = 'bsh'
fish_indicator = 'fsh'
zsh_indicator = 'zsh'
powershell_indicator = 'psh'
ion_indicator = 'ion'
elvish_indicator = 'esh'
tcsh_indicator = 'tsh'
nu_indicator = 'nu'
xonsh_indicator = 'xsh'
cmd_indicator = 'cmd'
unknown_indicator = ''
style = 'white bold'
disabled = true

[shlvl]
threshold = 2
format = '[$symbol$shlvl]($style) '
symbol = '↕️  '
repeat = false
style = 'bold yellow'
disabled = true

[status]
format = '[$symbol$status]($style) '
symbol = '✖'
success_symbol = ''
not_executable_symbol = '🚫'
not_found_symbol = '🔍'
sigint_symbol = '🧱'
signal_symbol = '⚡'
style = 'bold red'
map_symbol = false
recognize_signal_code = true
pipestatus = false
pipestatus_separator = '|'
pipestatus_format = '\[$pipestatus\] => [$symbol$common_meaning$signal_name$maybe_int]($style)'
disabled = true

[sudo]
format = '[as $symbol]($style)'
symbol = '🧙 '
style = 'bold blue'
allow_windows = false
disabled = true

[time]
format = 'at [$time]($style) '
style = 'bold yellow'
use_12hr = false
disabled = true
utc_time_offset = 'local'
time_range = '-'

[username]
format = '[$user]($style) in '
style_root = 'red bold'
style_user = 'yellow bold'
show_always = false
disabled = false

[custom]

